# Generated by ariadne-codegen on 2023-03-10 15:46
# Source: queries/

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel


class ProfileSchemaList(BaseModel):
    profile_schemas: List["ProfileSchemaListProfileSchemas"] = Field(
        alias="profileSchemas"
    )


class ProfileSchemaListProfileSchemas(BaseModel):
    name: str
    project: "ProfileSchemaListProfileSchemasProject"
    names: "ProfileSchemaListProfileSchemasNames"
    joins: Optional[List["ProfileSchemaListProfileSchemasJoins"]]
    primary_source: "ProfileSchemaListProfileSchemasPrimarySource" = Field(
        alias="primarySource"
    )


class ProfileSchemaListProfileSchemasProject(BaseModel):
    name: str


class ProfileSchemaListProfileSchemasNames(BaseModel):
    title: str


class ProfileSchemaListProfileSchemasJoins(BaseModel):
    name: str


class ProfileSchemaListProfileSchemasPrimarySource(BaseModel):
    attributes: Optional[List[str]]
    name: str


ProfileSchemaList.update_forward_refs()
ProfileSchemaListProfileSchemas.update_forward_refs()
ProfileSchemaListProfileSchemasProject.update_forward_refs()
ProfileSchemaListProfileSchemasNames.update_forward_refs()
ProfileSchemaListProfileSchemasJoins.update_forward_refs()
ProfileSchemaListProfileSchemasPrimarySource.update_forward_refs()
