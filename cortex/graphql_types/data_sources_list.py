# Generated by ariadne-codegen on 2023-03-10 15:46
# Source: queries/

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel


class DataSourcesList(BaseModel):
    data_sources: List["DataSourcesListDataSources"] = Field(alias="dataSources")


class DataSourcesListDataSources(BaseModel):
    attributes: Optional[List[str]]
    connection: Optional["DataSourcesListDataSourcesConnection"]
    name: str
    primary_key: Optional[str] = Field(alias="primaryKey")
    title: Optional[str]


class DataSourcesListDataSourcesConnection(BaseModel):
    name: str


DataSourcesList.update_forward_refs()
DataSourcesListDataSources.update_forward_refs()
DataSourcesListDataSourcesConnection.update_forward_refs()
