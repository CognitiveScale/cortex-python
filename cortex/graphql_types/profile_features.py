# Generated by ariadne-codegen on 2023-03-10 15:46
# Source: queries/

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel


class ProfileFeatures(BaseModel):
    profile_features: List["ProfileFeaturesProfileFeatures"] = Field(
        alias="profileFeatures"
    )


class ProfileFeaturesProfileFeatures(BaseModel):
    data_type: Optional[str] = Field(alias="dataType")
    feature_name: str = Field(alias="featureName")
    feature_type: Optional[str] = Field(alias="featureType")
    max_value: Optional[float] = Field(alias="maxValue")
    mean_value: Optional[float] = Field(alias="meanValue")
    min_value: Optional[float] = Field(alias="minValue")
    pct_dom: Optional[float] = Field(alias="pctDom")
    pct_null: Optional[float] = Field(alias="pctNull")
    profile_group: str = Field(alias="profileGroup")
    observations: Optional[str]
    source_name: str = Field(alias="sourceName")
    std_dev: Optional[float] = Field(alias="stdDev")
    unique_count: Optional[Any] = Field(alias="uniqueCount")


ProfileFeatures.update_forward_refs()
ProfileFeaturesProfileFeatures.update_forward_refs()
