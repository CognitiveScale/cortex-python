# Generated by ariadne-codegen on 2023-03-10 15:46
# Source: queries/

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel


class ProfileViewer(BaseModel):
    schema: "ProfileViewerSchema"
    features: List["ProfileViewerFeatures"]
    profile: Optional["ProfileViewerProfile"]


class ProfileViewerSchema(BaseModel):
    name: str
    title: Optional[str]
    description: Optional[str]
    attribute_tags: Optional[List["ProfileViewerSchemaAttributeTags"]] = Field(
        alias="attributeTags"
    )


class ProfileViewerSchemaAttributeTags(BaseModel):
    attributes: List["ProfileViewerSchemaAttributeTagsAttributes"]
    name: str


class ProfileViewerSchemaAttributeTagsAttributes(BaseModel):
    name: str
    source_name: str = Field(alias="sourceName")


class ProfileViewerFeatures(BaseModel):
    data_type: Optional[str] = Field(alias="dataType")
    feature_name: str = Field(alias="featureName")
    feature_type: Optional[str] = Field(alias="featureType")
    profile_group: str = Field(alias="profileGroup")
    source_name: str = Field(alias="sourceName")


class ProfileViewerProfile(BaseModel):
    attributes: List["ProfileViewerProfileAttributes"]
    profile_i_d: str = Field(alias="profileID")


class ProfileViewerProfileAttributes(BaseModel):
    group: Optional[str]
    key: str
    source: str
    timestamp: Optional[Any]
    type: str
    value: Any


ProfileViewer.update_forward_refs()
ProfileViewerSchema.update_forward_refs()
ProfileViewerSchemaAttributeTags.update_forward_refs()
ProfileViewerSchemaAttributeTagsAttributes.update_forward_refs()
ProfileViewerFeatures.update_forward_refs()
ProfileViewerProfile.update_forward_refs()
ProfileViewerProfileAttributes.update_forward_refs()
