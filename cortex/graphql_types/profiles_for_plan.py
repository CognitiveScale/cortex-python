# Generated by ariadne-codegen on 2023-03-10 15:46
# Source: queries/

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel


class ProfilesForPlan(BaseModel):
    profiles_for_plan: List["ProfilesForPlanProfilesForPlan"] = Field(
        alias="profilesForPlan"
    )


class ProfilesForPlanProfilesForPlan(BaseModel):
    profile_i_d: str = Field(alias="profileID")
    profile_schema: str = Field(alias="profileSchema")
    attributes: List["ProfilesForPlanProfilesForPlanAttributes"]


class ProfilesForPlanProfilesForPlanAttributes(BaseModel):
    group: Optional[str]
    key: str
    source: str
    timestamp: Optional[Any]
    type: str
    value: Any


ProfilesForPlan.update_forward_refs()
ProfilesForPlanProfilesForPlan.update_forward_refs()
ProfilesForPlanProfilesForPlanAttributes.update_forward_refs()
